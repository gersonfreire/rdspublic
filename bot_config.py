#!/usr/bin/env python3.7

import logging

import sys
import socket
import telegram

version = """
7.8.1 - Ativa ou desativa interface de bot√µes com menus 
"""

import os

# set up logging to standard output
logging.basicConfig(level=logging.DEBUG,
					format='%(asctime)s","%(name)s","%(levelname)s","%(message)s') 

# Tlg API Token
api_token 		= "" 	
admin_api_token = "" 	
dev_api_token 	= ""  	
prod_api_token 	= "" 	

# Caso esteja rodando em ambiente de produ√ß√£o, define token de produ√ß√£o
if os.environ.get('ENVIRONMENT') == 'dev':
	api_token = dev_api_token
else:
	api_token = prod_api_token 

# paypal rfbot app  
paypal_client_id = "" # "<<PAYPAL-CLIENT-ID>>"
paypal_client_secret = "" # "<<PAYPAL-CLIENT-SECRET>>"

# Usu√°rio do servidor SQL
users_dic = {}

# Id do administrador e do grupo de administradores
admin_telegram_id = 138429124
admin_group = []

# Conex√£o API Tlg
bot_client:telegram.Bot = None

# Nome do script que est√° rodando
script_name = sys.argv[0]

# Nome da m√°quina 
host_name = socket.gethostname().upper()

# M√°quina de produ√ß√£o default
default_prod_host_name = ''

# Link de suporte
default_suppport_link = f'' 

# Texto de ajuda
# https://gist.github.com/naiieandrade/b7166fc879627a1295e1b67b98672770
# Unicode emojis for Telegram
help_text = f"_Comandos dispon√≠veis:_\
	\n*/start* _entrar üö™_\
	\n*/help* _ajuda_\
	\n*Acesse o grupo:*\
	\n%s"

help_link = "\n\nPara maiores detalhes: \n"
help_link_admin = "\n\nPara maiores detalhes: \n"

help_text_admin = """
/admin - lista usu√°rios administradores üöÄ
/alarm - c√≥digo do controlador - lista alarmes em TEMPO REAL dado o c√≥digo do controlador
/autobot - servidor email senha - cria e executa novo bot ‚úîÔ∏è
/aviso - mensagem - envia mensagem para todos os usuarios
/autoping - endere√ßo do computador - monitora por ping um servidor ‚ö†Ô∏è
/autoriza - n√∫mero usu√°rio - autoriza usu√°rio a receber alarmes
/autorizados - ver somente os usu√°rios autorizados
/baixar - n√£o precisa digitar comando, apenas clique no Clipe de envio de arquivos do Telegram
/bkp - download do arquivo de armazenamento de usu√°rios
/codigo - texto - insere c√≥digo do Google para ativar conex√£o √† API do Gmail 
/config - verconfigura√ß√£o de leitura de e-mails üõ†
/contato - telefone com ddd - adiciona um contato para receber alarme de voz
/contatosms- telefone com ddd - adiciona ou remove um telefone para receber alarme por SMS
/contatozap - telefone com ddd - adiciona um contato para receber alarme de zap
/controladores - c√≥digo do conversor - lista controladores por conversor 
/conversores - lista todos os conversores conectados num servidor SITRAD
/dbconfig - configura√ß√£o - ver ou alterar configura√ß√£o de conex√£o ao servidor remoto
/dbtest - testa acesso ao servidor de banco de dados remoto
/google - mostra link de autoriza√ß√£o para conex√£o segura ao Gmail
/help - ajuda
/interval - tempo em segundos - intervalo para leitura de e-mails
/imap - liga/desliga - monitoramento de email
/imaplog - liga / desliga - log de depura√ß√£o de alarmes
/imaptest - testa conex√£o ao servidor de e-mails
/liberatodos - liga ou desliga - liga ou desliga bloqueio de usu√°rios n√£o autorizados
/link - altera link de suporte
/listabots - mostra Bots em execu√ß√£o no servidor de Bots
/log - visualiza hist√≥rico de erros de envio de mensagens
/novobot - token - servidor_email - usuario - senha - cria novo bot
/paghist - lista historico de transa√ß√µes recentes
/ping - endere√ßo - testa conex√£o ao servidor remoto 
/restart - reinicia o bot
/saldo - saldo atual do usu√°rio
/servidor - liga/desliga - liga ou desliga conex√£o ao banco de dados do servidor ‚úÖ
/sms - liga/desliga - liga ou desliga envio de alarmes por SMS
/smsenvia - mensagem - envia mensagem para todos os usu√°rios cadastrados
/smsenvia1 - [telefone] mensagem - envia mensagem para o usuario especifico do [telefone]
/smslist - lista contatos que recebem SMS
/sondas - c√≥digo - exibe temperaturas em tempo real, dado o c√≥digo  do controlador
/sitradlist - lista servidores SITRAD conectados
/sitradserver - codigo-servidor - exibe ou altera o servidor SITRAD atual 
/start - entrar no bot
/stop - parar bot
/testgmail - verifica conex√£o √† API do Gmail
/tokens - lista, acrescenta e apaga bots
/usuarios - ver todos os usu√°rios autorizados ou n√£o
/usegmail - liga/desliga - modo de leitura do Gmail (API/IMAP)
/ver - vers√£o do bot
/voz - liga / desliga - liga ou desliga alarme por voz ‚òéÔ∏è 
/vozlist - lista usu√°rios de alarme de voz ‚òéÔ∏è
/zaplist - lista usu√°rios de alarme de zap ‚òéÔ∏è
"""

from telegram.bot import Bot, BotCommand
bot_commands = [
	#BotCommand("start","Come√ßar"),
	#BotCommand("help", "Ajuda")
	BotCommand("admin","lista usu√°rios administradores üöÄ"),
	BotCommand("alarm","c√≥digo do controlador - lista alarmes em TEMPO REAL dado o c√≥digo do controlador"),
	BotCommand("autobot","servidor email senha - cria e executa novo bot ‚úîÔ∏è"),
	BotCommand("autoping","endere√ßo do computador - monitora por ping um servidor ‚ö†Ô∏è"),
	BotCommand("autoriza","n√∫mero usu√°rio - autoriza usu√°rio a receber alarmes"),
	BotCommand("autorizados","ver somente os usu√°rios autorizados"),
	BotCommand("baixar","Para enviar arquivo, n√£o precisa digitar comando, apenas clique no Clipe de envio de arquivos do Telegram"),
	BotCommand("bkp","download do arquivo de armazenamento de usu√°rios"),
	BotCommand("codigo","texto - insere c√≥digo do Google para ativar conex√£o √† API do Gmail"),
	BotCommand("config","verconfigura√ß√£o de leitura de e-mails üõ†"),
	BotCommand("contato","telefone com ddd - adiciona um contato para receber alarme de voz"),
	BotCommand("contatozap","telefone com ddd - adiciona um contato para receber alarme de zap"),
	BotCommand("controladores","c√≥digo do conversor - lista controladores por conversor"),
	BotCommand("conversores","lista todos os conversores conectados num servidor SITRAD"),
	BotCommand("dbconfig","configura√ß√£o - ver ou alterar configura√ß√£o de conex√£o ao servidor remoto"),
	BotCommand("dbtest","testa acesso ao servidor de banco de dados remoto"),
	BotCommand("google","mostra link de autoriza√ß√£o para conex√£o segura ao Gmail"),
	BotCommand("help","ajuda"),
	BotCommand("interval","tempo em segundos - intervalo para leitura de e-mails"),
	BotCommand("imap","liga/desliga - monitoramento de email"),
	BotCommand("imaplog","liga / desliga - log de depura√ß√£o de alarmes"),
	BotCommand("imaptest","testa conex√£o ao servidor de e-mails"),
	BotCommand("liberatodos","liga ou desliga - liga ou desliga bloqueio de usu√°rios n√£o autorizados"),
	BotCommand("link","altera link de suporte"),
	BotCommand("listabots","mostra Bots em execu√ß√£o no servidor de Bots"),
	BotCommand("log","visualiza hist√≥rico de erros de envio de mensagens"),
	BotCommand("novobot","token - servidor_email - usuario - senha - cria novo bot"),
	BotCommand("ping","endere√ßo - testa conex√£o ao servidor remoto"),
	BotCommand("restart","reinicia o bot"),
	BotCommand("servidor","liga/desliga - liga ou desliga conex√£o ao banco de dados do servidor ‚úÖ"),
	BotCommand("sondas","c√≥digo - exibe temperaturas em tempo real, dado o c√≥digo  do controlador"),
	BotCommand("sitradlist","lista servidores SITRAD conectados"),
	BotCommand("sitradserver","codigo-servidor - exibe ou altera o servidor SITRAD atual"),
	BotCommand("start","entrar no bot"),
	BotCommand("stop","parar bot"),
	BotCommand("testgmail","verifica conex√£o √† API do Gmail"),
	BotCommand("tokens","lista, acrescenta e apaga bots"),
	BotCommand("usuarios","ver todos os usu√°rios autorizados ou n√£o"),
	BotCommand("usegmail","liga/desliga - modo de leitura do Gmail (API/IMAP)"),
	BotCommand("ver","vers√£o do bot"),
	BotCommand("voz","liga / desliga - liga ou desliga alarme por voz ‚òéÔ∏è"),
	BotCommand("vozlist","lista usu√°rios de alarme de voz ‚òéÔ∏è"),
	BotCommand("zaplist","lista usu√°rios de alarme de zap ‚òéÔ∏è")
]


support_text = f"Comando n√£o existente:\n%s.\
			\nAcesse o grupo:\
			\n%s"

# Caracteres especiais ASCII
# https://fsymbols.com/font
# start_message = "* üëã ‚Ñ¨‚ÑØùìÇ-ùìãùíæùìÉùíπ‚Ñ¥ ùí∂‚Ñ¥ * *%s*_!_" # %str(bot_client.username)
start_message = "* üëã Bem-vindo ao * *%s*_!_" # %str(bot_client.username)

# Tempo default entre agendamentos
DEFAULT_POOLING_SECONDS = 60 # a cada 1 minuto

# ----------- Configura√ß√µes de seguran√ßa do Bot

# Permite novos usu√°rios receberem alarmes sem autoriza√ß√£o pr√©via
AUTO_ALLOW_NEW_USERS = False

# ----------- Configura√ß√µes espec√≠ficas

# Alarme de voz ligado/desligado
VOICE_STATUS = False

# Alarme via zap ligado/desligado
ZAP_STATUS = False

# Alarme via SMS ligado/desligado
SMS_STATUS = False

# Filtro de assunto de monitoramento de email
# default_subject_filter = 'Alarmes SmartMonit' # assunto padr√£o
default_subject_filter = None 

# Filtro de linhas de alarme a serem omitidas
default_remove_alarm_line = 'Finalizado'
default_filters_list = ['Finalizado'] #, 'Falha de comunica√ß√£o']

# Filtro de exibi√ß√£o apenas para destinat√°rios espec√≠ficos
show_only_for_user = {
}

# integra√ß√£o com servidor de Bots ativa
is_bot_manager_active = True

# log de e-mails ativo
is_bot_remote_log_active = True

# Configura√ß√£o de IMAP √© exclusiva para este Bot?
is_imap_owner = True

# Ativa/Desativa monitoramento de e-mails
is_imap_monitor_active = True

# Ativa/desativa log de leitura de e-mails no bot
is_imap_log_bot_active = True

# Usar GMAIL API para leitura de emails do Gmail
use_gmail_api = False

# Monitoramento de computadores, inicia com o pr√≥prio host local
host_monitored = socket.gethostname().upper()
host_monitored_list = \
[
    'localhost'
]

# comando usado para lista Bots em execu√ß√£o exceto pelo VS Code
bots_list_command_line = 'pgrep -a python|grep "\.\/"|cut -d" " -f 3' 

# libera bot para reutiliza√ß√£o por outro usu√°rio ou n√£o
is_reusable_bot = True

# Cria e-mail TrackFreeze automatico
auto_create_email = True

def set_config():
	result = False

	global admin_telegram_id
	try:
		if util_sql_autobot.set_config(globals()):  
			admin_telegram_id = int(admin_telegram_id)
			result = True
  
	except Exception as e:
		logging.error(str(e)) 

	return result

# for√ßa a leitura dos emails com layout padr√£o Sitrad
is_sitrad_layout=True

# API Key do provedor ApiWHA
wha_api_key = ''

# Contatos para envio de zap
zap_contacts = [
]

# Contatos para envio de SMS
sms_contacts = [
]

# 7.8.0 Ativa ou desativa interface de bot√µes com menus 
is_menu_enabled = True

# ---------- Testes unitarios -----------

def main():
  
	try:
		set_config()
	except Exception as e:
		logging.error(str(e)) 	

if __name__ == '__main__':
    main() 
